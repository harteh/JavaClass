-- p.418 PL/SQL
SET SERVEROUTPUT ON;

BEGIN
	DBMS_OUTPUT.PUT_LINE('HELLO');
END;
/

-- P.432
DECLARE
  V_NUMBER NUMBER := 13;
BEGIN
  IF MOD(V_NUMBER, 2) = 1 THEN
    DBMS_OUTPUT.PUT_LINE('홀수입니다!');
    
  ELSE
    DBMS_OUTPUT.PUT_LINE('짝수입니다!');
  END IF;
END;
/

-- V_CON 변수에 1을 대입
-- V_CON 1이상이면 '1이상', 1미만이면 1보다 작다, 1과 같으면 같다
DECLARE
  V_CON NUMBER := 1;
BEGIN
  IF V_CON >1 THEN
    DBMS_OUTPUT.PUT_LINE('1이상');
  ELSIF V_CON < 1 THEN
    DBMS_OUTPUT.PUT_LINE('1미만');
  ELSIF V_CON = 1 THEN
    DBMS_OUTPUT.PUT_LINE('1과 같다');
  END IF;
END;
/

--P.447
DECLARE
  V_SCORE NUMBER := 87;
BEGIN
  CASE
    WHEN V_SCORE >= 90 THEN DBMS_OUTPUT.PUT_LINE('A학점');
    WHEN V_SCORE >= 80 THEN DBMS_OUTPUT.PUT_LINE('B학점');
    WHEN V_SCORE >= 70 THEN DBMS_OUTPUT.PUT_LINE('C학점');
    WHEN V_SCORE >= 60 THEN DBMS_OUTPUT.PUT_LINE('D학점');
    ELSE DBMS_OUTPUT.PUT_LINE('F학점');
  END CASE;
END;
/

-- 기본 loop
DECLARE
  V_NUM NUMBER := 0;
BEGIN
  LOOP
    DBMS_OUTPUT.PUT_LINE('현재 V_NUM : ' || V_NUM);
    V_NUM := V_NUM + 1;
    EXIT WHEN V_NUM > 4;
  END LOOP;
END;
/

-- 기본 loop
DECLARE
  V_CNT NUMBER := 0;
  V_SUM NUMBER := 0;
BEGIN
  LOOP
    V_CNT := V_CNT + 1;
    V_SUM := V_SUM + V_CNT;
    DBMS_OUTPUT.PUT_LINE(V_SUM);
    EXIT WHEN V_CNT = 10;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE('총 합: ' ||V_SUM);
END;
/

-- FOR LOOP
DECLARE
  V_CNT NUMBER;
  V_SUM NUMBER := 0;
BEGIN
  FOR V_CNT IN 1..10 LOOP
    V_SUM := V_SUM + V_CNT;
    DBMS_OUTPUT.PUT_LINE(V_SUM);
  END LOOP;
END;
/

-- WHILE LOOP
DECLARE
  V_CNT NUMBER := 0;
  V_SUM NUMBER := 0;
BEGIN
  WHILE V_CNT < 10 LOOP
    V_CNT := V_CNT + 1;
    V_SUM := V_SUM + V_CNT;
    DBMS_OUTPUT.PUT_LINE(V_SUM);
  END LOOP;
END;
/

-- P.444 Q1
--숫자 1부터 10까지 중 홀수만 출력
BEGIN
  FOR i IN 1..10 LOOP
    CONTINUE WHEN MOD(i, 2)=0;
    DBMS_OUTPUT.PUT_LINE('현재 i의 값 : '|| i);
    END LOOP;
  END;
/


-- P.481 저장 서브프로그램
-- 프로시저 생성
CREATE OR REPLACE PROCEDURE pro_noparam
IS
  V_EMPNO NUMBER(4) := 7788;
  V_ENAME VARCHAR2(10);
BEGIN
  V_ENAME := 'SCOTT';
  DBMS_OUTPUT.PUT_LINE('V_EMPNO: '|| V_EMPNO);
  DBMS_OUTPUT.PUT_LINE('V_ENAME: '|| V_ENAME);
END;
/

-- 프로시저 실행
EXECUTE pro_noparam;

SELECT * FROM STUDENT;

-- 파라미터 사용하는 프로시저
-- 학번으로 검색하여, 같은 학번 학생의 학년을, 입력받은 학년으로 변경한다
CREATE OR REPLACE PROCEDURE TEST2
(
  V_STU_NO IN STUDENT.STU_NO%TYPE,    -- 학생번호 입력받음
  V_STU_GRADE IN STUDENT.STU_GRADE%TYPE  
)
IS
BEGIN
  UPDATE STUDENT
  SET STU_GRADE = V_STU_GRADE
    WHERE STU_NO = V_STU_NO;
END TEST2;
/

-- 실행
EXECUTE TEST2(20153075, 3);

-- 프로시저 생성
CREATE OR REPLACE PROCEDURE TEST3
(
  V_STU_NO IN STUDENT.STU_NO%TYPE,
  V_STU_NAME OUT STUDENT.STU_NAME%TYPE
)

IS
BEGIN
  SELECT STU_NAME
    INTO V_STU_NAME   -- STU_NAME을 V_STU_NAME에 대입하겠다
  FROM STUDENT
    WHERE STU_NO = V_STU_NO;
END TEST3;
/

-- 이름을 전달받아, 출력하기 (변수 정의)
VARIABLE D_STU_NAME VARCHAR2(10);
EXECUTE TEST3(20153075, :D_STU_NAME);

PRINT D_STU_NAME;
-- P.491 참고
DECLARE 
  D_STU_NAME STUDENT.STU_NAME%TYPE;
BEGIN
  TEST3(20153075, D_STU_NAME);      -- 프로시저 호출
  DBMS_OUTPUT.PUT_LINE('D_STU_NAME: '|| D_STU_NAME);
END;
/

--
CREATE OR REPLACE PROCEDURE TEST4
(
  V_SUB_NO IN ENROL.SUB_NO%TYPE,
  V_STU_NO IN ENROL.STU_NO%TYPE,
  V_ENR_GRADE IN OUT ENROL.ENR_GRADE%TYPE
)
IS
BEGIN
  UPDATE ENROL
    SET ENR_GRADE = ENR_GRADE+V_ENR_GRADE
    WHERE STU_NO = V_STU_NO AND SUB_NO = V_SUB_NO;
    
  SELECT ENR_GRADE
    INTO V_ENR_GRADE
    FROM ENROL
    WHERE STU_NO = V_STU_NO AND SUB_NO = V_SUB_NO;
END TEST4;
/

-- DROP PROCEDURE TEST4;
-- 
VARIABLE D_ENR_GRADE NUMBER
BEGIN 
  :D_ENR_GRADE := 10;
END;
/

SELECT * FROM ENROL;

--
EXECUTE TEST4(101, 20131001, :D_ENR_GRADE);
PRINT D_ENR_GRADE;


-- P.444 Q2
DECLARE
  V_DEPTNO DEPT.DEPTNO%TYPE := 10;
BEGIN
  CASE V_DEPTNO
    WHEN 10 THEN DBMS_OUTPUT.PUT_LINE('ACCOUNTING');
    WHEN 20 THEN DBMS_OUTPUT.PUT_LINE('RESEARCH');
    WHEN 30 THEN DBMS_OUTPUT.PUT_LINE('SALES');
    WHEN 40 THEN DBMS_OUTPUT.PUT_LINE('OPERATIONS');
    ELSE  DBMS_OUTPUT.PUT_LINE('N/A');
  END CASE;
END;
/
    





