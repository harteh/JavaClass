DESC STUDENT;
SELECT * FROM T_STUDENT;

CREATE TABLE T_STUDENT
  AS SELECT * FROM STUDENT WHERE STU_DEPT='기계';

-- 열 삽입
ALTER TABLE T_STUDENT  ADD ARMY CHAR(1);

-- 열 자료형 변경
ALTER TABLE T_STUDENT  MODIFY ARMY NUMBER;

-- 열 삭제  
ALTER TABLE T_STUDENT  DROP(ARMY);

--
RENAME T_STUDENT TO TEST_STUDENT;

-- 모든 데이터 삭제(테이블 구조 남음)
TRUNCATE TABLE TEST_STUDENT;

ROLLBACK;
SELECT * FROM TEST_STUDENT;
DESC TEST_STUDENT;
DROP TABLE TEST_STUDENT;

-- p.324
CREATE TABLE EMP_HW ( 
     EMPNO    NUMBER(4), 
     ENAME    VARCHAR2(10), 
     JOB      VARCHAR2(9), 
     MGR      NUMBER(4), 
     HIREDATE DATE, 
     SAL      NUMBER(7, 2), 
     COMM     NUMBER(7, 2), 
     DEPTNO   NUMBER(2) 
); 

-- Q2
ALTER TABLE EMP_HW ADD BIGO VARCHAR2(20);
-- Q3
ALTER TABLE EMP_HW MODIFY BIGO VARCHAR2(30);
-- Q4
ALTER TABLE EMP_HW 
RENAME COLUMN BIGO TO REMARK;
-- Q5
INSERT INTO EMP_HW 
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, NULL 
  FROM EMP; 

-- Q6
DROP TABLE EMP_HW;


-- P.362 CHAPTER 14
CREATE TABLE T_STUDENT(
  STU_NO CHAR(9),
  STU_NAME VARCHAR2(12) CONSTRAINT N_STU_NAME UNIQUE,
  STU_DEPT VARCHAR2(20) CONSTRAINT N_STU_DEPT NOT NULL
);

--
SELECT * FROM USER_CONSTRAINT WHERE TABLE_NAME = 'T_STUDENT';
-- SELECT * FROM USER_CONSTRAINT WHERE TABLE_NAME = 'STUDENT';

-- P.384
CREATE TABLE T_ENROL(
  SUB_NO CHAR(3),
  STU_NO CHAR(9),
  ENR_GRADE NUMBER(3),
    CONSTRAINT ENR_SUB_NO_FK1 FOREIGN KEY(SUB_NO) REFERENCES SUBJECT(SUB_NO),
    CONSTRAINT ENR_STU_NO_FK1 FOREIGN KEY(STU_NO) REFERENCES STUDENT(STU_NO),
    CONSTRAINT ENR_PK1 PRIMARY KEY(SUB_NO, STU_NO)
);

-- P.394
--Q1
CREATE TABLE DEPT_CONST (
  DEPTNO NUMBER(2)    CONSTRAINT DEPTCONST_DEPTNO_PK PRIMARY KEY,
  DNAME VARCHAR2(14)  CONSTRAINT DEPTCONST_DNAME_UNQ UNIQUE,
  LOC VARCHAR2(13)    CONSTRAINT DEPTCONST_LOC_NN NOT NULL
);

-- Q2
CREATE TABLE EMP_CONST(
  EMPNO NUMBER(4)     CONSTRAINT EMPCONST_EMPNO_PK PRIMARY KEY,
  ENAME VARCHAR2(10)  CONSTRAINT EMPCONST_ENAME_NN NOT NULL,
  JOB VARCHAR2(9),
  TEL VARCHAR2(20)    CONSTRAINT EMPCONST_TEL_UNQ UNIQUE,
  HIREDATE DATE,
  SAL NUMBER(7, 2)    CONSTRAINT EMPCONST_SAL_CHK CHECK (SAL BETWEEN 1000 AND 9999),
  COMM NUMBER(7, 2),
  DEPTNO NUMBER(2)    CONSTRAINT EMPCONST_DEPTNO_FK REFERENCES DEPT_CONST (DEPTNO)
);

SELECT * FROM DEPT_CONST;

-- Q3 두 테이블의 제약조건 확인
SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE 
  FROM USER_CONSTRAINTS 
 WHERE TABLE_NAME IN ( 'EMP_CONST', 'DEPT_CONST' ) 
ORDER BY CONSTRAINT_NAME;

-- 제약조건 삭제
ALTER TABLE DEPT_CONST
  DROP CONSTRAINT DEPTCONST_DNAME_UNQ;
  
  
-- P.170
SELECT EMPNO, ENAME, JOB, SAL,
    DECODE(JOB,
          'SALESMAN', SAL*1.1,
          'CLERK', SAL*1.15, 
          SAL) AS 인상급여
    FROM EMP;
    
-- 
SELECT EMPNO, ENAME, SAL,
  CASE JOB
      WHEN 'SALESMAN' THEN SAL*1.1
      WHEN 'CLERK' THEN SAL*2.2
      ELSE SAL
      END AS 급여인상
  FROM EMP;
    
-- P.175 Q4
SELECT EMPNO, ENAME, MGR,
  CASE
    WHEN MGR IS NULL THEN '0000'
    WHEN SUBSTR(MGR, 1, 2) = '75' THEN '5555'
    WHEN SUBSTR(MGR, 1, 2) = '76' THEN '6666'
    WHEN SUBSTR(MGR, 1, 2) = '77' THEN '7777'
    WHEN SUBSTR(MGR, 1, 2) = '78' THEN '8888'
    ELSE TO_CHAR(MGR)
  END AS CHG_MGR
FROM EMP;

-- ddl 전까지 문제 3
-- 1.	20 또는 30인 부서번호만 사원(emp)테이블에서 복사하여 EMP2(emp1)테이블을 생성해라.
CREATE TABLE EMP2 
  AS SELECT * FROM EMP WHERE DEPTNO IN (20, 30);

-- 2.	dept 테이블을 복사하여 DEPT2(dept1)테이블을 생성해라.
CREATE TABLE DEPT2
  AS SELECT * FROM DEPT;

-- 3.	salgrade테이블을 복사하여 SALGRADE2(salgrade1)테이블을 생성해라.
CREATE TABLE SALGRADE2
  AS SELECT * FROM SALGRADE;

-- 4.	각각의 테이블을 확인한다.
SELECT * FROM EMP2 ORDER BY DEPTNO;
SELECT * FROM DEPT2;
SELECT * FROM SALGRADE2;

-- 5.	사원번호 7401, 사원이름 HOMER, 급여 1300, 부서번호 10인 사원이 오늘 입사하였다.
INSERT INTO EMP2
  VALUES (7401, 'HOMER', NULL, NULL, SYSDATE, 1300, NULL, 10);

-- 6.	사원번호 7323, 사원이름 BRANDA, 부서번호 30,// 사원번호 7499와 동일한 급여를 받는 사원이 입사하였다. (부질의)
INSERT INTO EMP2 (EMPNO, ENAME, HIREDATE, SAL, DEPTNO)
  VALUES (7323, 'BRANDA', SYSDATE, (SELECT SAL FROM EMP2  WHERE EMPNO = 7499), 30);

-- 7.	사원(emp)테이블에서 부서번호가 10인 데이터를 EMP2(emp1)테이블에 삽입해라.
INSERT INTO EMP2 
  SELECT * FROM EMP WHERE DEPTNO = (10);
SELECT * FROM EMP2 ORDER BY DEPTNO;

-- 8.	사원번호 7369의 사원직무를 ANALYST 로 바꾸어라.
UPDATE EMP2
  SET JOB = 'ANALYST'
  WHERE EMPNO = 7369;
-- 9.	부서번호 20인 직원들의 급여를 10% 감하라.
UPDATE EMP2
  SET SAL = SAL*0.9
  WHERE DEPTNO = 20;

-- 10.	모든 사원의 급여를 +100 증가시켜라
UPDATE EMP2
  SET SAL = SAL+100;

-- 11.	지역이 DALLAS인 사원들의 급여를 10감하라. (부질의)
UPDATE EMP2
  SET SAL = SAL*0.9
  WHERE DEPTNO = (SELECT DEPTNO FROM DEPT2 WHERE LOC = 'DALLAS');

-- 12.	사원번호 7499가 퇴사하였다.
DELETE FROM EMP2 WHERE EMPNO='7499';

-- 13.	부서번호 50, 부서이름 ‘PLANNING’, 지역 ‘MIAMI’가 추가되었다.
INSERT INTO DEPT2
  VALUES (50, 'PLANNING', 'MIAMI');

-- 14.	부서번호가 40인 부서가 60으로 변경되었다.
UPDATE DEPT2
  SET DEPTNO = 60
  WHERE DEPTNO = 40;

-- 15.	Dept1 테이블에 없는 부서번호들을 갖고 있는 사원들의 부서번호를 99로 변경하라. (부질의)
UPDATE EMP2
  SET DEPTNO = 99
  WHERE DEPTNO NOT IN (SELECT DEPTNO FROM DEPT1);
  
SELECT * FROM EMP2 ORDER BY DEPTNO;

-- 16.	JONES, JOSH, CLARK가 30번 부서로 바뀌었다.
UPDATE EMP2
  SET DEPTNO = 30
  WHERE ENAME IN ('JONES', 'JOSH', 'CLARK');
  
SELECT * FROM EMP2 ORDER BY ENAME;

-- 17.	커미션이 null인 데이터를 0으로 바꾸어라.
UPDATE EMP2
  SET COMM = 0
  WHERE COMM IS NULL;

-- 18.	EMP2(Emp1) 전체 테이블의 데이터를 삭제하라.
DELETE FROM Emp2;





